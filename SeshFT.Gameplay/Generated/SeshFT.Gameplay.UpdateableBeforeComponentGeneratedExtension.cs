//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {
    public partial class Entity {
        public SeshFT.Gameplay.UpdateableBeforeComponent updateableBefore { get { return (SeshFT.Gameplay.UpdateableBeforeComponent)GetComponent(CoreComponentIds.UpdateableBefore); } }

        public bool hasUpdateableBefore { get { return HasComponent(CoreComponentIds.UpdateableBefore); } }

        public Entity AddUpdateableBefore(SeshFT.Gameplay.IUpdateableBefore newValue) {
            var component = CreateComponent<SeshFT.Gameplay.UpdateableBeforeComponent>(CoreComponentIds.UpdateableBefore);
            component.value = newValue;
            return AddComponent(CoreComponentIds.UpdateableBefore, component);
        }

        public Entity ReplaceUpdateableBefore(SeshFT.Gameplay.IUpdateableBefore newValue) {
            var component = CreateComponent<SeshFT.Gameplay.UpdateableBeforeComponent>(CoreComponentIds.UpdateableBefore);
            component.value = newValue;
            ReplaceComponent(CoreComponentIds.UpdateableBefore, component);
            return this;
        }

        public Entity RemoveUpdateableBefore() {
            return RemoveComponent(CoreComponentIds.UpdateableBefore);
        }
    }
}

    public partial class CoreMatcher {
        static IMatcher _matcherUpdateableBefore;

        public static IMatcher UpdateableBefore {
            get {
                if (_matcherUpdateableBefore == null) {
                    var matcher = (Matcher)Matcher.AllOf(CoreComponentIds.UpdateableBefore);
                    matcher.componentNames = CoreComponentIds.componentNames;
                    _matcherUpdateableBefore = matcher;
                }

                return _matcherUpdateableBefore;
            }
        }
    }
