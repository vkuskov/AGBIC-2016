//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {
    public partial class Entity {
        public SeshFT.Gameplay.GameplayCameraParamsComponent gameplayCameraParams { get { return (SeshFT.Gameplay.GameplayCameraParamsComponent)GetComponent(CoreComponentIds.GameplayCameraParams); } }

        public bool hasGameplayCameraParams { get { return HasComponent(CoreComponentIds.GameplayCameraParams); } }

        public Entity AddGameplayCameraParams(float newMinSize, float newMaxSize, float newMinDistance, float newMaxDistance, float newMaxTargetSpeed, float newCameraZoomSpeed) {
            var component = CreateComponent<SeshFT.Gameplay.GameplayCameraParamsComponent>(CoreComponentIds.GameplayCameraParams);
            component.minSize = newMinSize;
            component.maxSize = newMaxSize;
            component.minDistance = newMinDistance;
            component.maxDistance = newMaxDistance;
            component.maxTargetSpeed = newMaxTargetSpeed;
            component.cameraZoomSpeed = newCameraZoomSpeed;
            return AddComponent(CoreComponentIds.GameplayCameraParams, component);
        }

        public Entity ReplaceGameplayCameraParams(float newMinSize, float newMaxSize, float newMinDistance, float newMaxDistance, float newMaxTargetSpeed, float newCameraZoomSpeed) {
            var component = CreateComponent<SeshFT.Gameplay.GameplayCameraParamsComponent>(CoreComponentIds.GameplayCameraParams);
            component.minSize = newMinSize;
            component.maxSize = newMaxSize;
            component.minDistance = newMinDistance;
            component.maxDistance = newMaxDistance;
            component.maxTargetSpeed = newMaxTargetSpeed;
            component.cameraZoomSpeed = newCameraZoomSpeed;
            ReplaceComponent(CoreComponentIds.GameplayCameraParams, component);
            return this;
        }

        public Entity RemoveGameplayCameraParams() {
            return RemoveComponent(CoreComponentIds.GameplayCameraParams);
        }
    }
}

    public partial class CoreMatcher {
        static IMatcher _matcherGameplayCameraParams;

        public static IMatcher GameplayCameraParams {
            get {
                if (_matcherGameplayCameraParams == null) {
                    var matcher = (Matcher)Matcher.AllOf(CoreComponentIds.GameplayCameraParams);
                    matcher.componentNames = CoreComponentIds.componentNames;
                    _matcherGameplayCameraParams = matcher;
                }

                return _matcherGameplayCameraParams;
            }
        }
    }
