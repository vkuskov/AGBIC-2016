//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {
    public partial class Entity {
        public SeshFT.Gameplay.DesiredFaceDirectionComponent desiredFaceDirection { get { return (SeshFT.Gameplay.DesiredFaceDirectionComponent)GetComponent(CoreComponentIds.DesiredFaceDirection); } }

        public bool hasDesiredFaceDirection { get { return HasComponent(CoreComponentIds.DesiredFaceDirection); } }

        public Entity AddDesiredFaceDirection(Heartcatch.MathLib.Vector2 newValue) {
            var component = CreateComponent<SeshFT.Gameplay.DesiredFaceDirectionComponent>(CoreComponentIds.DesiredFaceDirection);
            component.value = newValue;
            return AddComponent(CoreComponentIds.DesiredFaceDirection, component);
        }

        public Entity ReplaceDesiredFaceDirection(Heartcatch.MathLib.Vector2 newValue) {
            var component = CreateComponent<SeshFT.Gameplay.DesiredFaceDirectionComponent>(CoreComponentIds.DesiredFaceDirection);
            component.value = newValue;
            ReplaceComponent(CoreComponentIds.DesiredFaceDirection, component);
            return this;
        }

        public Entity RemoveDesiredFaceDirection() {
            return RemoveComponent(CoreComponentIds.DesiredFaceDirection);
        }
    }
}

    public partial class CoreMatcher {
        static IMatcher _matcherDesiredFaceDirection;

        public static IMatcher DesiredFaceDirection {
            get {
                if (_matcherDesiredFaceDirection == null) {
                    var matcher = (Matcher)Matcher.AllOf(CoreComponentIds.DesiredFaceDirection);
                    matcher.componentNames = CoreComponentIds.componentNames;
                    _matcherDesiredFaceDirection = matcher;
                }

                return _matcherDesiredFaceDirection;
            }
        }
    }
